Only in MCP-LTS\src/minecraft/com: mojontwins
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/Minecraft.java" "MCP-LTS\\src/minecraft/net/minecraft/client/Minecraft.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/Minecraft.java"	2021-11-10 11:11:51.701815400 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/client/Minecraft.java"	2021-11-11 12:27:49.171754800 +0100
@@ -58,6 +58,8 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GLContext;
 
+import com.mojontwins.modloader.ModLoader;
+
 public final class Minecraft implements Runnable {
     public PlayerController playerController = new PlayerControllerSP(this);
     private boolean fullscreen = false;
@@ -93,7 +95,7 @@
     private MinecraftApplet mcApplet;
     public SoundManager sndManager;
     public MouseHelper mouseHelper;
-    public File mcDataDir;
+    public static File mcDataDir;
     private String server;
     private TextureWaterFX textureWaterFX;
     private TextureLavaFX textureLavaFX;
@@ -310,7 +312,16 @@
 
         long var23 = System.currentTimeMillis();
         int var28 = 0;
-
+        
+        try {
+        	ModLoader.init ();
+        	ModLoader.registerAllTextureOverrides (this.renderEngine);
+        } catch (Exception e) {
+        	e.printStackTrace();
+        	this.shutdownMinecraftApplet();
+        	return;
+        }
+        	
         try {
             while(this.running) {
                 if (this.theWorld != null) {
@@ -808,6 +819,8 @@
 
         World var7 = var6.generate(var5, var1, var3, var8);
         this.setLevel(var7);
+        
+        ModLoader.hookGameStart(this);
     }
 
     public final void setLevel(World var1) {
@@ -864,4 +877,6 @@
 
         System.gc();
     }
+    
+    Minecraft getInstance () { return this; }
 }
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/gui/GuiCrafting.java" "MCP-LTS\\src/minecraft/net/minecraft/client/gui/GuiCrafting.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/gui/GuiCrafting.java"	2021-11-10 11:11:51.779940400 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/client/gui/GuiCrafting.java"	2021-11-11 10:51:04.432177600 +0100
@@ -9,6 +9,8 @@
 import net.minecraft.game.recipe.CraftingManager;
 import org.lwjgl.opengl.GL11;
 
+import com.mojontwins.modloader.ModCraftingManager;
+
 public final class GuiCrafting extends GuiContainer {
     private InventoryCrafting inventoryCrafting = new InventoryCrafting(this, 3, 3);
     private IInventory iInventory = new InventoryCraftResult();
@@ -63,7 +65,12 @@
             }
         }
 
-        this.iInventory.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(var1));
+        ItemStack itemStack = CraftingManager.getInstance().findMatchingRecipe(var1);
+        if (itemStack == null) {
+            itemStack = ModCraftingManager.findMatchingRecipe(var1);
+        }
+
+        this.iInventory.setInventorySlotContents(0, itemStack);
     }
 
     protected final void drawGuiContainerForegroundLayer() {
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/renderer/RenderEngine.java" "MCP-LTS\\src/minecraft/net/minecraft/client/renderer/RenderEngine.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/renderer/RenderEngine.java"	2021-11-10 11:11:52.092440200 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/client/renderer/RenderEngine.java"	2021-11-11 22:38:44.400599900 +0100
@@ -173,27 +173,38 @@
     }
 
     public final void updateDynamicTextures() {
-        int var1;
-        TextureFX var2;
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            (var2 = (TextureFX)this.textureList.get(var1)).anaglyphEnabled = this.options.anaglyph;
-            var2.onTick();
+    	// This method has been modified to allow for TextureFX in both atlases (originally just `terrain.png`)
+    	
+        int i = -1;
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX = (TextureFX)this.textureList.get(var1);
+            textureFX.anaglyphEnabled = this.options.anaglyph;
+            textureFX.onTick();
             this.imageData.clear();
-            this.imageData.put(var2.imageData);
-            this.imageData.position(0).limit(var2.imageData.length);
-            GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, var2.iconIndex % 16 << 4, var2.iconIndex / 16 << 4, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+            this.imageData.put(textureFX.imageData);
+            this.imageData.position(0).limit(textureFX.imageData.length);
+            
+            if (textureFX.iconIndex != i) {
+            	textureFX.bindImage (this);
+            	i = textureFX.iconIndex;
+            }
+            
+            GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, textureFX.iconIndex % 16 << 4, textureFX.iconIndex / 16 << 4, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
         }
 
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            if ((var2 = (TextureFX)this.textureList.get(var1)).textureId > 0) {
+        // I dunno what's this for but I will just leave it here...
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX; 
+        	if ((textureFX = (TextureFX)this.textureList.get(var1)).textureId > 0) {
                 this.imageData.clear();
-                this.imageData.put(var2.imageData);
-                this.imageData.position(0).limit(var2.imageData.length);
-                GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, var2.textureId);
-                GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, 0, 0, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+                this.imageData.put(textureFX.imageData);
+                this.imageData.position(0).limit(textureFX.imageData.length);
+                GL11.glBindTexture(GL11.GL_TEXTURE_2D, textureFX.textureId);
+                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 16, 16,  GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
             }
         }
-
     }
 
     public final void refreshTextures() {
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/renderer/block/TextureFX.java" "MCP-LTS\\src/minecraft/net/minecraft/client/renderer/block/TextureFX.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/client/renderer/block/TextureFX.java"	2021-11-10 11:11:52.139315500 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/client/renderer/block/TextureFX.java"	2021-11-11 22:34:30.986080500 +0100
@@ -1,15 +1,32 @@
 package net.minecraft.client.renderer.block;
 
+import org.lwjgl.opengl.GL11;
+
+import net.minecraft.client.renderer.RenderEngine;
+
 public class TextureFX {
-    public byte[] imageData = new byte[1024];
+    public byte[] imageData;
     public int iconIndex;
-    public boolean anaglyphEnabled = false;
-    public int textureId = 0;
+    public boolean anaglyphEnabled;
+    public int textureId;
+    public int tileImage;
 
     public TextureFX(int var1) {
-        this.iconIndex = var1;
+        imageData = new byte[1024];
+        anaglyphEnabled = false;
+        textureId = 0;
+        tileImage = 0;
+        iconIndex = var1;
     }
 
     public void onTick() {
     }
+    
+    public void bindImage (RenderEngine renderEngine) {
+    	if (tileImage == 0) {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/terrain.png"));
+    	} else {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/gui/items.png"));
+    	}
+    }
 }
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java" "MCP-LTS\\src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java"	2021-11-10 11:11:52.514314200 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java"	2021-11-11 11:14:44.455263300 +0100
@@ -2,6 +2,8 @@
 
 import com.mojang.nbt.NBTTagCompound;
 import com.mojang.nbt.NBTTagList;
+import com.mojontwins.modloader.ModFurnaceRecipes;
+
 import net.minecraft.client.inventory.IInventory;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.Material;
@@ -188,6 +190,8 @@
     }
 
     private static int smeltItem(int var0) {
+    	int result = ModFurnaceRecipes.smeltItem (var0); if (result != -1) return result;
+    	
         if (var0 == Block.oreIron.blockID) {
             return Item.ingotIron.shiftedIndex;
         } else if (var0 == Block.oreGold.blockID) {
diff -ur "MCP-LTS_Clean\\src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java" "MCP-LTS\\src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java"
--- "MCP-LTS_Clean\\src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java"	2021-11-10 11:11:52.811206400 +0100
+++ "MCP-LTS\\src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java"	2021-11-11 11:56:38.808218500 +0100
@@ -2,6 +2,9 @@
 
 import java.util.ArrayList;
 import java.util.Random;
+
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.BlockFlower;
 import net.minecraft.game.level.Spawner;
@@ -405,8 +408,12 @@
         this.guiLoading.displayLoadingString("Building..");
         this.loadingBar();
         this.setNextPhase(0.0F);
+        
         var6.findSpawn();
         generateHouse(var6);
+        
+        ModLoader.hookGenerateStructures (this, var6);
+        
         this.guiLoading.displayLoadingString("Planting..");
         this.loadingBar();
         if (this.levelType != 1) {
