Only in MCP-LTS/src/minecraft: armor
Only in MCP-LTS/src/minecraft/com: mojontwins
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/Minecraft.java MCP-LTS/src/minecraft/net/minecraft/client/Minecraft.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/Minecraft.java	2021-11-10 11:11:51.701815400 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/Minecraft.java	2021-11-12 11:08:59.975564500 +0100
@@ -58,6 +58,8 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GLContext;
 
+import com.mojontwins.modloader.ModLoader;
+
 public final class Minecraft implements Runnable {
     public PlayerController playerController = new PlayerControllerSP(this);
     private boolean fullscreen = false;
@@ -93,7 +95,7 @@
     private MinecraftApplet mcApplet;
     public SoundManager sndManager;
     public MouseHelper mouseHelper;
-    public File mcDataDir;
+    public static File mcDataDir;
     private String server;
     private TextureWaterFX textureWaterFX;
     private TextureLavaFX textureLavaFX;
@@ -310,7 +312,16 @@
 
         long var23 = System.currentTimeMillis();
         int var28 = 0;
-
+        
+        try {
+        	ModLoader.init ();
+        	ModLoader.registerAllTextureOverrides (this.renderEngine);
+        } catch (Exception e) {
+        	e.printStackTrace();
+        	this.shutdownMinecraftApplet();
+        	return;
+        }
+        	
         try {
             while(this.running) {
                 if (this.theWorld != null) {
@@ -808,6 +819,8 @@
 
         World var7 = var6.generate(var5, var1, var3, var8);
         this.setLevel(var7);
+        
+        ModLoader.hookGameStart(this);
     }
 
     public final void setLevel(World var1) {
@@ -864,4 +877,6 @@
 
         System.gc();
     }
+    
+    Minecraft getInstance () { return this; }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/gui/GuiCrafting.java MCP-LTS/src/minecraft/net/minecraft/client/gui/GuiCrafting.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/gui/GuiCrafting.java	2021-11-10 11:11:51.779940400 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/gui/GuiCrafting.java	2021-11-11 10:51:04.432177600 +0100
@@ -9,6 +9,8 @@
 import net.minecraft.game.recipe.CraftingManager;
 import org.lwjgl.opengl.GL11;
 
+import com.mojontwins.modloader.ModCraftingManager;
+
 public final class GuiCrafting extends GuiContainer {
     private InventoryCrafting inventoryCrafting = new InventoryCrafting(this, 3, 3);
     private IInventory iInventory = new InventoryCraftResult();
@@ -63,7 +65,12 @@
             }
         }
 
-        this.iInventory.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(var1));
+        ItemStack itemStack = CraftingManager.getInstance().findMatchingRecipe(var1);
+        if (itemStack == null) {
+            itemStack = ModCraftingManager.findMatchingRecipe(var1);
+        }
+
+        this.iInventory.setInventorySlotContents(0, itemStack);
     }
 
     protected final void drawGuiContainerForegroundLayer() {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java	2021-11-10 11:11:51.983064800 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java	2021-11-12 13:56:37.865299700 +0100
@@ -1,5 +1,7 @@
 package net.minecraft.client.player;
 
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.client.Minecraft;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.item.Item;
@@ -34,7 +36,8 @@
         }
 
         if (var6 && this.mc.thePlayer.canHarvestBlock(Block.blocksList[var4])) {
-            Block.blocksList[var4].dropBlockAsItem(this.mc.theWorld, var1, var2, var3, var5);
+        	if (ModLoader.hookOnBlockHarvested (this.mc, this.mc.theWorld, var1, var2, var3, var4, var5) == false) 
+        		Block.blocksList[var4].dropBlockAsItem(this.mc.theWorld, var1, var2, var3, var5);
         }
 
         return var6;
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderEngine.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderEngine.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderEngine.java	2021-11-10 11:11:52.092440200 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderEngine.java	2021-11-11 22:38:44.400599900 +0100
@@ -173,27 +173,38 @@
     }
 
     public final void updateDynamicTextures() {
-        int var1;
-        TextureFX var2;
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            (var2 = (TextureFX)this.textureList.get(var1)).anaglyphEnabled = this.options.anaglyph;
-            var2.onTick();
+    	// This method has been modified to allow for TextureFX in both atlases (originally just `terrain.png`)
+    	
+        int i = -1;
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX = (TextureFX)this.textureList.get(var1);
+            textureFX.anaglyphEnabled = this.options.anaglyph;
+            textureFX.onTick();
             this.imageData.clear();
-            this.imageData.put(var2.imageData);
-            this.imageData.position(0).limit(var2.imageData.length);
-            GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, var2.iconIndex % 16 << 4, var2.iconIndex / 16 << 4, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+            this.imageData.put(textureFX.imageData);
+            this.imageData.position(0).limit(textureFX.imageData.length);
+            
+            if (textureFX.iconIndex != i) {
+            	textureFX.bindImage (this);
+            	i = textureFX.iconIndex;
+            }
+            
+            GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, textureFX.iconIndex % 16 << 4, textureFX.iconIndex / 16 << 4, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
         }
 
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            if ((var2 = (TextureFX)this.textureList.get(var1)).textureId > 0) {
+        // I dunno what's this for but I will just leave it here...
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX; 
+        	if ((textureFX = (TextureFX)this.textureList.get(var1)).textureId > 0) {
                 this.imageData.clear();
-                this.imageData.put(var2.imageData);
-                this.imageData.position(0).limit(var2.imageData.length);
-                GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, var2.textureId);
-                GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, 0, 0, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+                this.imageData.put(textureFX.imageData);
+                this.imageData.position(0).limit(textureFX.imageData.length);
+                GL11.glBindTexture(GL11.GL_TEXTURE_2D, textureFX.textureId);
+                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 16, 16,  GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
             }
         }
-
     }
 
     public final void refreshTextures() {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java	2021-11-10 11:11:52.139315500 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java	2021-11-12 09:24:08.946269200 +0100
@@ -1,15 +1,32 @@
 package net.minecraft.client.renderer.block;
 
+import org.lwjgl.opengl.GL11;
+
+import net.minecraft.client.renderer.RenderEngine;
+
 public class TextureFX {
-    public byte[] imageData = new byte[1024];
+    public byte[] imageData;
     public int iconIndex;
-    public boolean anaglyphEnabled = false;
-    public int textureId = 0;
+    public boolean anaglyphEnabled;
+    public int textureId;
+    public int tileImage;
 
     public TextureFX(int var1) {
-        this.iconIndex = var1;
+        imageData = new byte[1024];
+        anaglyphEnabled = false;
+        textureId = 0;
+        tileImage = 0;
+        iconIndex = var1;
     }
 
     public void onTick() {
     }
+    
+    public void bindImage (RenderEngine renderEngine) {;
+    	if (tileImage == 0) {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/terrain.png"));
+    	} else {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/gui/items.png"));
+    	}
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java	2021-11-10 11:11:52.514314200 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java	2021-11-11 11:14:44.455263300 +0100
@@ -2,6 +2,8 @@
 
 import com.mojang.nbt.NBTTagCompound;
 import com.mojang.nbt.NBTTagList;
+import com.mojontwins.modloader.ModFurnaceRecipes;
+
 import net.minecraft.client.inventory.IInventory;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.Material;
@@ -188,6 +190,8 @@
     }
 
     private static int smeltItem(int var0) {
+    	int result = ModFurnaceRecipes.smeltItem (var0); if (result != -1) return result;
+    	
         if (var0 == Block.oreIron.blockID) {
             return Item.ingotIron.shiftedIndex;
         } else if (var0 == Block.oreGold.blockID) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/EntityLiving.java MCP-LTS/src/minecraft/net/minecraft/game/entity/EntityLiving.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/EntityLiving.java	2021-11-10 11:11:52.545578000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/EntityLiving.java	2021-11-15 16:17:48.547561200 +0100
@@ -1,6 +1,12 @@
 package net.minecraft.game.entity;
 
 import com.mojang.nbt.NBTTagCompound;
+import com.mojontwins.modloader.entity.status.Status;
+import com.mojontwins.modloader.entity.status.StatusEffect;
+
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.StepSound;
@@ -35,6 +41,9 @@
     protected boolean isJumping;
     private float defaultPitch;
     protected float moveSpeed;
+    
+    // Added by ModLoader: status effects
+    protected HashMap<Integer,StatusEffect> activeStatusEffectsMap;
 
     public EntityLiving(World var1) {
         super(var1);
@@ -50,6 +59,9 @@
         Math.random();
         this.rotationYaw = (float)(Math.random() * 3.1415927410125732D * 2.0D);
         this.stepHeight = 0.5F;
+        
+        // Added by Modloader: status effects
+        activeStatusEffectsMap = new HashMap<Integer,StatusEffect>();
     }
 
     public final String getTexture() {
@@ -199,6 +211,10 @@
         }
 
         this.prevRotationYawHead += var5;
+        
+        
+        // Added by ModLoader: status effects
+        this.updateStatusEffects ();
     }
 
     protected final void setSize(float var1, float var2) {
@@ -314,6 +330,20 @@
         var1.setShort("HurtTime", (short)this.hurtTime);
         var1.setShort("DeathTime", (short)this.deathTime);
         var1.setShort("AttackTime", (short)this.attackTime);
+        
+        // Added by ModLoader: status effects
+        var1.setShort("statusEffects", (short)this.activeStatusEffectsMap.size());
+        
+        Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+        int counter = 0;
+    	while (it.hasNext()) {
+    		Integer statusID = it.next();
+    		StatusEffect statusEffect = (StatusEffect) activeStatusEffectsMap.get(statusID);
+    		var1.setShort("statusEffect_" + counter + "_statusID", (short)statusEffect.statusID);
+    		var1.setShort("statusEffect_" + counter + "_duration", (short)statusEffect.duration);
+    		var1.setShort("statusEffect_" + counter + "_amplifier", (short)statusEffect.amplifier);
+    		counter ++;
+    	}
     }
 
     protected void readEntityFromNBT(NBTTagCompound var1) {
@@ -325,6 +355,17 @@
         this.hurtTime = var1.getShort("HurtTime");
         this.deathTime = var1.getShort("DeathTime");
         this.attackTime = var1.getShort("AttackTime");
+        
+        // Added by ModLoader: status effects
+        this.activeStatusEffectsMap.clear();
+        int counter = var1.getShort("statusEffects");
+        for (int i = 0; i < counter; i ++) {
+        	int statusID = (int)var1.getShort("statusEffect_" + i + "_statusID");
+        	int duration = (int)var1.getShort("statusEffect_" + i + "_duration");
+        	int amplifier = (int)var1.getShort("statusEffect_" + i + "_amplifier");
+        	StatusEffect statusEffect = new StatusEffect(statusID, duration, amplifier);
+        	activeStatusEffectsMap.put(Integer.valueOf(statusID), statusEffect);
+        }
     }
 
     protected String getEntityString() {
@@ -459,4 +500,56 @@
         this.setPosition(var1, var2 + this.height / 2.0F, var3);
         return this.worldObj.checkIfAABBIsClear1(this.boundingBox) && this.worldObj.getCollidingBoundingBoxes(this.boundingBox).size() == 0 && !this.worldObj.getIsAnyLiquid(this.boundingBox);
     }
+    
+    // Added by ModLoader: status effects
+    public void updateStatusEffects () {
+    	Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+    	
+    	while (it.hasNext()) {
+    		Integer statusID = it.next();
+    		StatusEffect statusEffect = (StatusEffect) activeStatusEffectsMap.get(statusID);
+    		
+    		// Status effect will return false when duration has run out
+    		if (!statusEffect.onUpdate(this)) {
+    			it.remove ();
+    		}
+    	}
+    }
+    
+    public void removeStatusEffect (int id) {
+    	if (activeStatusEffectsMap.containsKey(id)) {
+    		activeStatusEffectsMap.remove(id);
+    	}
+    }
+    
+    public void clearActiveStatusEffects() {
+    	Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+    	
+    	while (it.hasNext()) {
+    		it.next();
+     		it.remove ();
+    	}
+    }
+    
+    public Collection<StatusEffect> getActiveStatusEffects() {
+        return activeStatusEffectsMap.values();
+    }    
+    
+    public boolean isStatusActive(Status status) {
+        return activeStatusEffectsMap.containsKey(Integer.valueOf(status.id));
+    }  
+    
+    public StatusEffect getActiveStatusEffect(Status status) {
+        return (StatusEffect)activeStatusEffectsMap.get(Integer.valueOf(status.id));
+    }    
+    
+    public void addStatusEffect (StatusEffect statusEffect) {
+    	if (Status.statusTypes[statusEffect.statusID].isApplicableTo(this)) {
+    		if (activeStatusEffectsMap.containsKey(Integer.valueOf(statusEffect.statusID))) {
+    			((StatusEffect)activeStatusEffectsMap.get(Integer.valueOf(statusEffect.statusID))).combine(statusEffect);
+    		} else {
+	    		activeStatusEffectsMap.put(Integer.valueOf(statusEffect.statusID), statusEffect);
+    		}
+    	}
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemArmor.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemArmor.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemArmor.java	2021-11-10 11:11:52.670577200 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemArmor.java	2021-11-14 15:04:23.527376400 +0100
@@ -1,11 +1,11 @@
 package net.minecraft.game.item;
 
-public final class ItemArmor extends Item {
+public class ItemArmor extends Item {
     private static final int[] damageReduceAmountArray = new int[]{3, 8, 6, 3};
     private static final int[] maxDamageArray = new int[]{11, 16, 15, 13};
-    public final int armorType;
-    public final int damageReduceAmount;
-    public final int renderIndex;
+    public int armorType;
+    public int damageReduceAmount;
+    public int renderIndex;
 
     public ItemArmor(int var1, int var2, int var3, int var4) {
         super(var1);
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemAxe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemAxe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemAxe.java	2021-11-10 11:11:52.670577200 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemAxe.java	2021-11-12 11:46:15.758968600 +0100
@@ -2,7 +2,7 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemAxe extends ItemTool {
+public class ItemAxe extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
 
     public ItemAxe(int var1, int var2) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBow.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBow.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBow.java	2021-11-10 11:11:52.686188600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBow.java	2021-11-12 11:46:24.755938200 +0100
@@ -4,13 +4,13 @@
 import net.minecraft.game.entity.player.EntityPlayer;
 import net.minecraft.game.level.World;
 
-public final class ItemBow extends Item {
+public class ItemBow extends Item {
     public ItemBow(int var1) {
         super(5);
         this.maxStackSize = 1;
     }
 
-    public final ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+    public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
         if (var3.inventory.consumeInventoryItem(Item.arrow.shiftedIndex)) {
             var2.playSoundAtEntity(var3, "random.bow", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
             var2.spawnEntityInWorld(new EntityArrow(var2, var3));
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java	2021-11-10 11:11:52.686188600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java	2021-11-12 11:46:39.229743100 +0100
@@ -3,14 +3,14 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.level.World;
 
-public final class ItemFlintAndSteel extends Item {
+public class ItemFlintAndSteel extends Item {
     public ItemFlintAndSteel(int var1) {
         super(3);
         this.maxStackSize = 1;
         this.maxDamage = 64;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 == 0) {
             --var4;
         }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemHoe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemHoe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemHoe.java	2021-11-10 11:11:52.701828600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemHoe.java	2021-11-12 11:47:11.626280800 +0100
@@ -4,14 +4,14 @@
 import net.minecraft.game.entity.other.EntityItem;
 import net.minecraft.game.level.World;
 
-public final class ItemHoe extends Item {
+public class ItemHoe extends Item {
     public ItemHoe(int var1, int var2) {
         super(var1);
         this.maxStackSize = 1;
         this.maxDamage = 32 << var2;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var3 > 0 && var4 > 0 && var5 > 0 && var3 < var2.width - 1 && var4 < var2.height - 1 && var5 < var2.length - 1) {
             var6 = var2.getBlockId(var3, var4, var5);
             if ((var2.getBlockMaterial(var3, var4 + 1, var5).isSolid() || var6 != Block.grass.blockID) && var6 != Block.dirt.blockID) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPainting.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPainting.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPainting.java	2021-11-10 11:11:52.701828600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPainting.java	2021-11-12 11:47:23.654843700 +0100
@@ -3,13 +3,13 @@
 import net.minecraft.game.entity.EntityPainting;
 import net.minecraft.game.level.World;
 
-public final class ItemPainting extends Item {
+public class ItemPainting extends Item {
     public ItemPainting(int var1) {
         super(65);
         this.maxDamage = 64;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 == 0) {
             return false;
         } else if (var6 == 1) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPickaxe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPickaxe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPickaxe.java	2021-11-10 11:11:52.701828600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPickaxe.java	2021-11-12 11:46:01.136183000 +0100
@@ -3,7 +3,7 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.Material;
 
-public final class ItemPickaxe extends ItemTool {
+public class ItemPickaxe extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
     private int harvestLevel;
 
@@ -12,7 +12,7 @@
         this.harvestLevel = var2;
     }
 
-    public final boolean canHarvestBlock(Block var1) {
+    public boolean canHarvestBlock(Block var1) {
         if (var1 == Block.obsidian) {
             return this.harvestLevel == 3;
         } else if (var1 != Block.blockDiamond && var1 != Block.oreDiamond) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSeeds.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSeeds.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSeeds.java	2021-11-10 11:11:52.701828600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSeeds.java	2021-11-12 11:47:39.196972600 +0100
@@ -3,7 +3,7 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.level.World;
 
-public final class ItemSeeds extends Item {
+public class ItemSeeds extends Item {
     private int blockType;
 
     public ItemSeeds(int var1, int var2) {
@@ -11,7 +11,7 @@
         this.blockType = var2;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 != 1) {
             return false;
         } else if (var3 > 0 && var4 > 0 && var5 > 0 && var3 < var2.width - 1 && var4 < var2.height - 1 && var5 < var2.length - 1) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSoup.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSoup.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSoup.java	2021-11-10 11:11:52.701828600 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSoup.java	2021-11-12 11:47:45.447350500 +0100
@@ -3,12 +3,12 @@
 import net.minecraft.game.entity.player.EntityPlayer;
 import net.minecraft.game.level.World;
 
-public final class ItemSoup extends ItemFood {
+public class ItemSoup extends ItemFood {
     public ItemSoup(int var1, int var2) {
         super(26, 10);
     }
 
-    public final ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+    public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
         super.onItemRightClick(var1, var2, var3);
         return new ItemStack(Item.bowlEmpty);
     }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSpade.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSpade.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSpade.java	2021-11-10 11:11:52.717438700 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSpade.java	2021-11-12 11:47:52.637219000 +0100
@@ -2,7 +2,7 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemSpade extends ItemTool {
+public class ItemSpade extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
 
     public ItemSpade(int var1, int var2) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSword.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSword.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSword.java	2021-11-10 11:11:52.717438700 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSword.java	2021-11-12 11:44:23.664514600 +0100
@@ -2,8 +2,8 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemSword extends Item {
-    private int weaponDamage;
+public class ItemSword extends Item {
+    public int weaponDamage;
 
     public ItemSword(int var1, int var2) {
         super(var1);
@@ -12,19 +12,19 @@
         this.weaponDamage = 4 + (var2 << 1);
     }
 
-    public final float getStrVsBlock(Block var1) {
+    public float getStrVsBlock(Block var1) {
         return 1.5F;
     }
 
-    public final void hitEntity(ItemStack var1) {
+    public void hitEntity(ItemStack var1) {
         var1.damageItem(1);
     }
 
-    public final void onBlockDestroyed(ItemStack var1) {
+    public void onBlockDestroyed(ItemStack var1) {
         var1.damageItem(2);
     }
 
-    public final int getDamageVsEntity() {
+    public int getDamageVsEntity() {
         return this.weaponDamage;
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemTool.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemTool.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemTool.java	2021-11-10 11:11:52.717438700 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemTool.java	2021-11-12 11:40:23.153406400 +0100
@@ -4,8 +4,8 @@
 
 public class ItemTool extends Item {
     private Block[] blocksEffectiveAgainst;
-    private float efficiencyOnProperMaterial = 4.0F;
-    private int damageVsEntity;
+    public float efficiencyOnProperMaterial = 4.0F;
+    public int damageVsEntity;
 
     public ItemTool(int var1, int var2, int var3, Block[] var4) {
         super(var1);
@@ -16,7 +16,7 @@
         this.damageVsEntity = var2 + var3;
     }
 
-    public final float getStrVsBlock(Block var1) {
+    public float getStrVsBlock(Block var1) {
         for(int var2 = 0; var2 < this.blocksEffectiveAgainst.length; ++var2) {
             if (this.blocksEffectiveAgainst[var2] == var1) {
                 return this.efficiencyOnProperMaterial;
@@ -26,15 +26,15 @@
         return 1.0F;
     }
 
-    public final void hitEntity(ItemStack var1) {
+    public void hitEntity(ItemStack var1) {
         var1.damageItem(2);
     }
 
-    public final void onBlockDestroyed(ItemStack var1) {
+    public void onBlockDestroyed(ItemStack var1) {
         var1.damageItem(1);
     }
 
-    public final int getDamageVsEntity() {
+    public int getDamageVsEntity() {
         return this.damageVsEntity;
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java MCP-LTS/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java	2021-11-10 11:11:52.811206400 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java	2021-11-11 11:56:38.808218500 +0100
@@ -2,6 +2,9 @@
 
 import java.util.ArrayList;
 import java.util.Random;
+
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.BlockFlower;
 import net.minecraft.game.level.Spawner;
@@ -405,8 +408,12 @@
         this.guiLoading.displayLoadingString("Building..");
         this.loadingBar();
         this.setNextPhase(0.0F);
+        
         var6.findSpawn();
         generateHouse(var6);
+        
+        ModLoader.hookGenerateStructures (this, var6);
+        
         this.guiLoading.displayLoadingString("Planting..");
         this.loadingBar();
         if (this.levelType != 1) {
