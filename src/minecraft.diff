Only in MCP-LTS/src/minecraft: armor
Only in MCP-LTS/src/minecraft/com: mojontwins
Only in MCP-LTS/src/minecraft: mob
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/Minecraft.java MCP-LTS/src/minecraft/net/minecraft/client/Minecraft.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/Minecraft.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/Minecraft.java	2021-11-17 13:30:36.533662100 +0100
@@ -58,6 +58,8 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GLContext;
 
+import com.mojontwins.modloader.ModLoader;
+
 public final class Minecraft implements Runnable {
     public PlayerController playerController = new PlayerControllerSP(this);
     private boolean fullscreen = false;
@@ -93,7 +95,7 @@
     private MinecraftApplet mcApplet;
     public SoundManager sndManager;
     public MouseHelper mouseHelper;
-    public File mcDataDir;
+    public static File mcDataDir;
     private String server;
     private TextureWaterFX textureWaterFX;
     private TextureLavaFX textureLavaFX;
@@ -310,7 +312,16 @@
 
         long var23 = System.currentTimeMillis();
         int var28 = 0;
-
+        
+        try {
+        	ModLoader.init ();
+        	ModLoader.registerAllTextureOverrides (this.renderEngine);
+        } catch (Exception e) {
+        	e.printStackTrace();
+        	this.shutdownMinecraftApplet();
+        	return;
+        }
+        	
         try {
             while(this.running) {
                 if (this.theWorld != null) {
@@ -454,6 +465,11 @@
                         EntityPlayerSP var12 = var10000;
                         InventoryPlayer var11;
                         int var19 = (var9 = (var11 = var10000.inventory).getStackInSlot(var11.currentItem)) != null ? Item.itemsList[var9.itemID].getDamageVsEntity() : 1;
+                        
+                        // var19 : hit strength.
+                        // var14 : Entity being hit
+                        var19 = ModLoader.hookAttackStrengthModifier (this.thePlayer, var14, var19);
+                        
                         int var17 = var19;
                         if (var19 > 0) {
                             var14.attackEntityFrom(var12, var17);
@@ -469,6 +485,7 @@
                         return;
                     }
                 } else if (this.objectMouseOver.typeOfHit == 0) {
+
                     int var10 = this.objectMouseOver.blockX;
                     var3 = this.objectMouseOver.blockY;
                     int var13 = this.objectMouseOver.blockZ;
@@ -808,6 +825,8 @@
 
         World var7 = var6.generate(var5, var1, var3, var8);
         this.setLevel(var7);
+        
+        ModLoader.hookGameStart(this);
     }
 
     public final void setLevel(World var1) {
@@ -864,4 +883,6 @@
 
         System.gc();
     }
+    
+    Minecraft getInstance () { return this; }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/ThreadDownloadResources.java MCP-LTS/src/minecraft/net/minecraft/client/ThreadDownloadResources.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/ThreadDownloadResources.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/ThreadDownloadResources.java	2021-11-22 22:51:24.535235500 +0100
@@ -45,14 +45,17 @@
                         final String child = (split = s.split(","))[0];
                         final int int1 = Integer.parseInt(split[1]);
                         Long.parseLong(split[2]);
-                        final File file;
-                        if (!(file = new File(this.resourcesFolder, child)).exists() || file.length() != int1) {
+                        final File file = new File(this.resourcesFolder, child);
+                        if (!file.exists() || file.length() != int1) {
+                        	URL fileUrl = new URL(context, child.replaceAll(" ", "%20"));
+                        	System.out.println ("+ " + file + " does not exist or has changed, downloading from " + fileUrl);
                             file.getParentFile().mkdirs();
-                            this.downloadResource(new URL(context, child.replaceAll(" ", "%20")), file);
+                            this.downloadResource(fileUrl, file);
                             if (this.closing) {
                                 break Label_0334;
                             }
-                        }
+                        } else System.out.println ("+ " + file + " already exists.");
+                        
                         final Minecraft mc = this.mc;
                         final String s2 = child;
                         final File file2 = file;
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/gui/GuiCrafting.java MCP-LTS/src/minecraft/net/minecraft/client/gui/GuiCrafting.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/gui/GuiCrafting.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/gui/GuiCrafting.java	2021-11-11 10:51:04.432177600 +0100
@@ -9,6 +9,8 @@
 import net.minecraft.game.recipe.CraftingManager;
 import org.lwjgl.opengl.GL11;
 
+import com.mojontwins.modloader.ModCraftingManager;
+
 public final class GuiCrafting extends GuiContainer {
     private InventoryCrafting inventoryCrafting = new InventoryCrafting(this, 3, 3);
     private IInventory iInventory = new InventoryCraftResult();
@@ -63,7 +65,12 @@
             }
         }
 
-        this.iInventory.setInventorySlotContents(0, CraftingManager.getInstance().findMatchingRecipe(var1));
+        ItemStack itemStack = CraftingManager.getInstance().findMatchingRecipe(var1);
+        if (itemStack == null) {
+            itemStack = ModCraftingManager.findMatchingRecipe(var1);
+        }
+
+        this.iInventory.setInventorySlotContents(0, itemStack);
     }
 
     protected final void drawGuiContainerForegroundLayer() {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/model/ModelRenderer.java MCP-LTS/src/minecraft/net/minecraft/client/model/ModelRenderer.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/model/ModelRenderer.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/model/ModelRenderer.java	2021-11-22 23:35:25.212761700 +0100
@@ -26,6 +26,10 @@
         this.textureOffsetY = var2;
     }
 
+    public void addBox(float var1, float var2, float var3, int var4, int var5, int var6) {
+        this.addBox(var1, var2, var3, var4, var5, var6, 0.0F);
+    }
+    
     public final void addBox(float var1, float var2, float var3, int var4, int var5, int var6, float var7) {
         this.corners = new PositionTextureVertex[8];
         this.faces = new TexturedQuad[6];
Only in MCP-LTS/src/minecraft/net/minecraft/client/particle: EntityStatusEffectFX.java
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerController.java MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerController.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerController.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerController.java	2021-11-18 23:07:16.570865700 +0100
@@ -26,7 +26,7 @@
         Block var5 = Block.blocksList[var4.getBlockId(var1, var2, var3)];
         byte var6 = var4.getBlockMetadata(var1, var2, var3);
         boolean var7 = var4.setBlockWithNotify(var1, var2, var3, 0);
-        if (var5 != null && var7) {
+        if (var5 != null && var7) { 
             this.mc.sndManager.playSound(var5.stepSound.stepSoundDir(), (float)var1 + 0.5F, (float)var2 + 0.5F, (float)var3 + 0.5F, (var5.stepSound.soundVolume + 1.0F) / 2.0F, var5.stepSound.soundPitch * 0.8F);
             var5.onBlockDestroyedByPlayer(var4, var1, var2, var3, var6);
         }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java	2021-11-10 11:11:51.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/player/PlayerControllerSP.java	2021-11-12 13:56:37.865299700 +0100
@@ -1,5 +1,7 @@
 package net.minecraft.client.player;
 
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.client.Minecraft;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.item.Item;
@@ -34,7 +36,8 @@
         }
 
         if (var6 && this.mc.thePlayer.canHarvestBlock(Block.blocksList[var4])) {
-            Block.blocksList[var4].dropBlockAsItem(this.mc.theWorld, var1, var2, var3, var5);
+        	if (ModLoader.hookOnBlockHarvested (this.mc, this.mc.theWorld, var1, var2, var3, var4, var5) == false) 
+        		Block.blocksList[var4].dropBlockAsItem(this.mc.theWorld, var1, var2, var3, var5);
         }
 
         return var6;
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/ItemRenderer.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/ItemRenderer.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/ItemRenderer.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/ItemRenderer.java	2021-11-17 12:51:30.863774400 +0100
@@ -7,6 +7,9 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.item.ItemStack;
 import org.lwjgl.opengl.GL11;
+
+import com.mojontwins.modloader.ModLoader;
+
 import util.MathHelper;
 
 public final class ItemRenderer {
@@ -53,9 +56,19 @@
             }
 
             GL11.glScalef(0.4F, 0.4F, 0.4F);
-            if (this.itemToRender.itemID < 256 && Block.blocksList[this.itemToRender.itemID].getRenderType() == 0) {
+            int renderType;
+            if (this.itemToRender.itemID < 256 && 
+            	(
+            		(renderType = Block.blocksList[this.itemToRender.itemID].getRenderType()) == 0 ||
+                    ModLoader.renderBlockIsItemFull3D(renderType)
+            	)
+            ) {
                 GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, this.mc.renderEngine.getTexture("/terrain.png"));
-                this.renderBlocksInstance.renderBlockOnInventory(Block.blocksList[this.itemToRender.itemID]);
+                Block var8 = Block.blocksList[this.itemToRender.itemID];
+                if (renderType == 0)
+                	this.renderBlocksInstance.renderBlockOnInventory(var8);
+                else
+                	ModLoader.renderInvBlock(this.renderBlocksInstance, var8, renderType);
             } else {
                 if (this.itemToRender.itemID < 256) {
                     GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, this.mc.renderEngine.getTexture("/terrain.png"));
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderBlocks.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderBlocks.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderBlocks.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderBlocks.java	2021-11-17 10:02:56.843375600 +0100
@@ -5,6 +5,8 @@
 import net.minecraft.game.level.World;
 import org.lwjgl.opengl.GL11;
 
+import com.mojontwins.modloader.ModLoader;
+
 public final class RenderBlocks {
     private World blockAccess;
     private int overrideBlockTexture = -1;
@@ -30,11 +32,11 @@
     }
 
     public final boolean renderBlockByRenderType(Block var1, int var2, int var3, int var4) {
-        int var5;
+        int var5 = var1.getRenderType();
         Tessellator var6;
         float var10;
         boolean var26;
-        if ((var5 = var1.getRenderType()) == 0) {
+        if (var5 == 0) {
             var6 = Tessellator.instance;
             var26 = false;
             if (this.flipTexture || var1.shouldSideBeRendered(this.blockAccess, var2, var3 - 1, var4, 0)) {
@@ -439,7 +441,7 @@
 
                         return true;
                     } else {
-                        return false;
+                        return ModLoader.renderWorldBlock(this, blockAccess, var2, var3, var4, var1, var5);
                     }
                 }
             }
@@ -801,8 +803,7 @@
                 Tessellator.setNormal(0.0F, -1.0F, 0.0F);
                 this.renderBlockTorch(var1, -0.5F, -0.5F, -0.5F, 0.0F, 0.0F);
                 var2.draw();
-            }
-
+            } 
         }
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderEngine.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderEngine.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderEngine.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderEngine.java	2021-11-11 22:38:44.400599900 +0100
@@ -173,27 +173,38 @@
     }
 
     public final void updateDynamicTextures() {
-        int var1;
-        TextureFX var2;
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            (var2 = (TextureFX)this.textureList.get(var1)).anaglyphEnabled = this.options.anaglyph;
-            var2.onTick();
+    	// This method has been modified to allow for TextureFX in both atlases (originally just `terrain.png`)
+    	
+        int i = -1;
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX = (TextureFX)this.textureList.get(var1);
+            textureFX.anaglyphEnabled = this.options.anaglyph;
+            textureFX.onTick();
             this.imageData.clear();
-            this.imageData.put(var2.imageData);
-            this.imageData.position(0).limit(var2.imageData.length);
-            GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, var2.iconIndex % 16 << 4, var2.iconIndex / 16 << 4, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+            this.imageData.put(textureFX.imageData);
+            this.imageData.position(0).limit(textureFX.imageData.length);
+            
+            if (textureFX.iconIndex != i) {
+            	textureFX.bindImage (this);
+            	i = textureFX.iconIndex;
+            }
+            
+            GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, textureFX.iconIndex % 16 << 4, textureFX.iconIndex / 16 << 4, 16, 16, GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
         }
 
-        for(var1 = 0; var1 < this.textureList.size(); ++var1) {
-            if ((var2 = (TextureFX)this.textureList.get(var1)).textureId > 0) {
+        // I dunno what's this for but I will just leave it here...
+        
+        for(int var1 = 0; var1 < this.textureList.size(); ++var1) {
+        	TextureFX textureFX; 
+        	if ((textureFX = (TextureFX)this.textureList.get(var1)).textureId > 0) {
                 this.imageData.clear();
-                this.imageData.put(var2.imageData);
-                this.imageData.position(0).limit(var2.imageData.length);
-                GL11.glBindTexture(3553 /*GL_TEXTURE_2D*/, var2.textureId);
-                GL11.glTexSubImage2D(3553 /*GL_TEXTURE_2D*/, 0, 0, 0, 16, 16, 6408 /*GL_RGBA*/, 5121 /*GL_UNSIGNED_BYTE*/, this.imageData);
+                this.imageData.put(textureFX.imageData);
+                this.imageData.position(0).limit(textureFX.imageData.length);
+                GL11.glBindTexture(GL11.GL_TEXTURE_2D, textureFX.textureId);
+                GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, 16, 16,  GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, this.imageData);
             }
         }
-
     }
 
     public final void refreshTextures() {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderGlobal.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderGlobal.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/RenderGlobal.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/RenderGlobal.java	2021-11-16 09:40:57.608409500 +0100
@@ -9,10 +9,12 @@
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.particle.EntityBubbleFX;
 import net.minecraft.client.particle.EntityExplodeFX;
+import net.minecraft.client.particle.EntityFX;
 import net.minecraft.client.particle.EntityFlameFX;
 import net.minecraft.client.particle.EntityLavaFX;
 import net.minecraft.client.particle.EntitySmokeFX;
 import net.minecraft.client.particle.EntitySplashFX;
+import net.minecraft.client.particle.EntityStatusEffectFX;
 import net.minecraft.client.physics.AxisAlignedBB;
 import net.minecraft.client.physics.MovingObjectPosition;
 import net.minecraft.client.renderer.entity.RenderManager;
@@ -733,6 +735,10 @@
                 this.mc.effectRenderer.addEffect(new EntityLavaFX(this.worldObj, var2, var3, var4));
             } else if (var1 == "splash") {
                 this.mc.effectRenderer.addEffect(new EntitySplashFX(this.worldObj, var2, var3, var4));
+            } else if (var1 == "status_effect") {
+            	EntityStatusEffectFX entityFX = new EntityStatusEffectFX(this.worldObj, var2, var3, var4, 0, 0, 0);
+            	entityFX.setParticleColor(var5, var6, var7);
+            	this.mc.effectRenderer.addEffect(entityFX);            	
             } else {
                 if (var1 == "largesmoke") {
                     this.mc.effectRenderer.addEffect(new EntitySmokeFX(this.worldObj, var2, var3, var4, 2.5F));
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/block/TextureFX.java	2021-11-12 09:24:08.946269200 +0100
@@ -1,15 +1,32 @@
 package net.minecraft.client.renderer.block;
 
+import org.lwjgl.opengl.GL11;
+
+import net.minecraft.client.renderer.RenderEngine;
+
 public class TextureFX {
-    public byte[] imageData = new byte[1024];
+    public byte[] imageData;
     public int iconIndex;
-    public boolean anaglyphEnabled = false;
-    public int textureId = 0;
+    public boolean anaglyphEnabled;
+    public int textureId;
+    public int tileImage;
 
     public TextureFX(int var1) {
-        this.iconIndex = var1;
+        imageData = new byte[1024];
+        anaglyphEnabled = false;
+        textureId = 0;
+        tileImage = 0;
+        iconIndex = var1;
     }
 
     public void onTick() {
     }
+    
+    public void bindImage (RenderEngine renderEngine) {;
+    	if (tileImage == 0) {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/terrain.png"));
+    	} else {
+    		GL11.glBindTexture(GL11.GL_TEXTURE_2D, renderEngine.getTexture("/gui/items.png"));
+    	}
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/entity/RenderItem.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/entity/RenderItem.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/entity/RenderItem.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/entity/RenderItem.java	2021-11-17 12:36:27.570928800 +0100
@@ -10,6 +10,9 @@
 import net.minecraft.game.entity.other.EntityItem;
 import net.minecraft.game.item.ItemStack;
 import org.lwjgl.opengl.GL11;
+
+import com.mojontwins.modloader.ModLoader;
+
 import util.MathHelper;
 
 public final class RenderItem extends Render {
@@ -24,8 +27,15 @@
     public final void renderItemIntoGUI(RenderEngine var1, ItemStack var2, int var3, int var4) {
         if (var2 != null) {
             int var9;
-            if (var2.itemID < 256 && Block.blocksList[var2.itemID].getRenderType() == 0) {
-                var9 = var2.itemID;
+            int renderType;
+
+            if (var2.itemID < 256 && 
+            	(
+            		(renderType = Block.blocksList[var2.itemID].getRenderType()) == 0 ||
+            		ModLoader.renderBlockIsItemFull3D(renderType)
+            	)
+            ) {
+            	var9 = var2.itemID;
                 RenderEngine.bindTexture(var1.getTexture("/terrain.png"));
                 Block var8 = Block.blocksList[var9];
                 GL11.glPushMatrix();
@@ -35,7 +45,10 @@
                 GL11.glRotatef(210.0F, 1.0F, 0.0F, 0.0F);
                 GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);
                 GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-                this.renderBlocks.renderBlockOnInventory(var8);
+                if (renderType == 0) 
+                	this.renderBlocks.renderBlockOnInventory(var8);
+                else
+                	ModLoader.renderInvBlock(this.renderBlocks, var8, renderType);
                 GL11.glPopMatrix();
             } else {
                 if (var2.getItem().getIconIndex() >= 0) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/entity/RenderManager.java MCP-LTS/src/minecraft/net/minecraft/client/renderer/entity/RenderManager.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/client/renderer/entity/RenderManager.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/client/renderer/entity/RenderManager.java	2021-11-20 23:46:30.260988300 +0100
@@ -27,6 +27,8 @@
 import net.minecraft.game.level.World;
 import org.lwjgl.opengl.GL11;
 
+import com.mojontwins.modloader.ModLoader;
+
 public final class RenderManager {
     private Map entityRenderMap = new HashMap();
     public static RenderManager instance = new RenderManager();
@@ -37,7 +39,8 @@
     private float viewerPosY;
     private float viewerPosZ;
 
-    private RenderManager() {
+    @SuppressWarnings("unchecked")
+	private RenderManager() {
         this.entityRenderMap.put(EntitySpider.class, new RenderSpider());
         this.entityRenderMap.put(EntityPig.class, new RenderLiving(new ModelPig(), 0.7F));
         this.entityRenderMap.put(EntitySheep.class, new RenderSheep(new ModelSheep(), new ModelSheepFur(), 0.7F));
@@ -63,7 +66,11 @@
     public final Render getEntityRenderObject(Entity var1) {
         Class var2 = var1.getClass();
         Render var3;
-        if ((var3 = (Render)this.entityRenderMap.get(var2)) == null && var2 != Entity.class) {
+        var3 = ModLoader.getEntityRender(var2);
+        if (var3 == null) var3 = (Render)this.entityRenderMap.get(var2); else
+        	var3.setRenderManager(this);
+        
+        if (var3 == null && var2 != Entity.class) {
             var3 = (Render)this.entityRenderMap.get(var2.getSuperclass());
             this.entityRenderMap.put(var2, var3);
         }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/Block.java MCP-LTS/src/minecraft/net/minecraft/game/block/Block.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/Block.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/block/Block.java	2021-11-17 13:30:36.559647100 +0100
@@ -1,6 +1,9 @@
 package net.minecraft.game.block;
 
 import java.util.Random;
+
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.client.physics.AxisAlignedBB;
 import net.minecraft.client.physics.MovingObjectPosition;
 import net.minecraft.client.renderer.Vec3D;
@@ -207,6 +210,10 @@
     public boolean isCollidable() {
         return true;
     }
+    
+    public boolean canCollideCheck (int metadata, boolean flag) {
+    	return isCollidable ();
+    }
 
     public void updateTick(World var1, int var2, int var3, int var4, Random var5) {
     }
@@ -249,6 +256,8 @@
             if (var2.mainInventory[var2.currentItem] != null) {
                 var4 = 1.0F * var2.mainInventory[var2.currentItem].getItem().getStrVsBlock(this);
             }
+            
+            var4 = ModLoader.hookBlockHitStrengthModifier (var1, this, var4);
 
             float var5 = var4;
             if (var1.isInsideOfMaterial()) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/BlockFluid.java MCP-LTS/src/minecraft/net/minecraft/game/block/BlockFluid.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/BlockFluid.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/block/BlockFluid.java	2021-11-17 08:01:54.194526100 +0100
@@ -139,6 +139,10 @@
     public boolean isCollidable() {
         return false;
     }
+    
+    public boolean canCollideCheck (int metadata, boolean flag) {
+    	return flag && metadata == 0;
+    }
 
     public AxisAlignedBB getCollisionBoundingBoxFromPool(int var1, int var2, int var3) {
         return null;
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntity.java MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntity.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntity.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntity.java	2021-11-18 23:22:46.973733000 +0100
@@ -17,4 +17,8 @@
 
     public void updateEntity() {
     }
+    
+    // Added my ModLoader
+    public void onTileEntityRemoved(World world, int x, int y, int z) {
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/block/tileentity/TileEntityFurnace.java	2021-11-11 11:14:44.455263300 +0100
@@ -2,6 +2,8 @@
 
 import com.mojang.nbt.NBTTagCompound;
 import com.mojang.nbt.NBTTagList;
+import com.mojontwins.modloader.ModFurnaceRecipes;
+
 import net.minecraft.client.inventory.IInventory;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.Material;
@@ -188,6 +190,8 @@
     }
 
     private static int smeltItem(int var0) {
+    	int result = ModFurnaceRecipes.smeltItem (var0); if (result != -1) return result;
+    	
         if (var0 == Block.oreIron.blockID) {
             return Item.ingotIron.shiftedIndex;
         } else if (var0 == Block.oreGold.blockID) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/EntityLiving.java MCP-LTS/src/minecraft/net/minecraft/game/entity/EntityLiving.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/EntityLiving.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/EntityLiving.java	2021-11-22 23:21:00.640758900 +0100
@@ -1,7 +1,16 @@
 package net.minecraft.game.entity;
 
 import com.mojang.nbt.NBTTagCompound;
+import com.mojontwins.modloader.ModLoader;
+import com.mojontwins.modloader.entity.status.Status;
+import com.mojontwins.modloader.entity.status.StatusEffect;
+
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
 import java.util.List;
+
+import net.minecraft.client.renderer.Vec3D;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.StepSound;
 import net.minecraft.game.level.World;
@@ -35,6 +44,9 @@
     protected boolean isJumping;
     private float defaultPitch;
     protected float moveSpeed;
+    
+    // Added by ModLoader: status effects
+    protected HashMap<Integer,StatusEffect> activeStatusEffectsMap;
 
     public EntityLiving(World var1) {
         super(var1);
@@ -50,6 +62,9 @@
         Math.random();
         this.rotationYaw = (float)(Math.random() * 3.1415927410125732D * 2.0D);
         this.stepHeight = 0.5F;
+        
+        // Added by Modloader: status effects
+        activeStatusEffectsMap = new HashMap<Integer,StatusEffect>();
     }
 
     public final String getTexture() {
@@ -199,6 +214,10 @@
         }
 
         this.prevRotationYawHead += var5;
+        
+        
+        // Added by ModLoader: status effects
+        this.updateStatusEffects ();
     }
 
     protected final void setSize(float var1, float var2) {
@@ -314,6 +333,20 @@
         var1.setShort("HurtTime", (short)this.hurtTime);
         var1.setShort("DeathTime", (short)this.deathTime);
         var1.setShort("AttackTime", (short)this.attackTime);
+        
+        // Added by ModLoader: status effects
+        var1.setShort("statusEffects", (short)this.activeStatusEffectsMap.size());
+        
+        Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+        int counter = 0;
+    	while (it.hasNext()) {
+    		Integer statusID = it.next();
+    		StatusEffect statusEffect = (StatusEffect) activeStatusEffectsMap.get(statusID);
+    		var1.setShort("statusEffect_" + counter + "_statusID", (short)statusEffect.statusID);
+    		var1.setShort("statusEffect_" + counter + "_duration", (short)statusEffect.duration);
+    		var1.setShort("statusEffect_" + counter + "_amplifier", (short)statusEffect.amplifier);
+    		counter ++;
+    	}
     }
 
     protected void readEntityFromNBT(NBTTagCompound var1) {
@@ -325,6 +358,17 @@
         this.hurtTime = var1.getShort("HurtTime");
         this.deathTime = var1.getShort("DeathTime");
         this.attackTime = var1.getShort("AttackTime");
+        
+        // Added by ModLoader: status effects
+        this.activeStatusEffectsMap.clear();
+        int counter = var1.getShort("statusEffects");
+        for (int i = 0; i < counter; i ++) {
+        	int statusID = (int)var1.getShort("statusEffect_" + i + "_statusID");
+        	int duration = (int)var1.getShort("statusEffect_" + i + "_duration");
+        	int amplifier = (int)var1.getShort("statusEffect_" + i + "_amplifier");
+        	StatusEffect statusEffect = new StatusEffect(statusID, duration, amplifier);
+        	activeStatusEffectsMap.put(Integer.valueOf(statusID), statusEffect);
+        }
     }
 
     protected String getEntityString() {
@@ -375,8 +419,9 @@
         this.moveStrafing *= 0.98F;
         this.moveForward *= 0.98F;
         this.randomYawVelocity *= 0.9F;
-        var3 = this.moveForward;
-        var2 = this.moveStrafing;
+        float f = ModLoader.hookEntitySpeedModifier (this);
+        var3 = this.moveForward * f;
+        var2 = this.moveStrafing * f;
         float var4;
         if (this.handleWaterMovement()) {
             var4 = this.posY;
@@ -459,4 +504,123 @@
         this.setPosition(var1, var2 + this.height / 2.0F, var3);
         return this.worldObj.checkIfAABBIsClear1(this.boundingBox) && this.worldObj.getCollidingBoundingBoxes(this.boundingBox).size() == 0 && !this.worldObj.getIsAnyLiquid(this.boundingBox);
     }
+    
+    // Added by ModLoader: status effects
+    public void updateStatusEffects () {
+    	if (activeStatusEffectsMap.size() == 0) return; 
+    	
+    	Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+    	
+    	// This will help me select one effect at random:
+    	int randomEffectCounter = 0;
+    	int randomEffectSelected = this.rand.nextInt(activeStatusEffectsMap.size());    	
+    	
+    	while (it.hasNext()) {
+    		Integer statusID = it.next();
+    		StatusEffect statusEffect = (StatusEffect) activeStatusEffectsMap.get(statusID);
+    		
+    		// Create a particle? Not perfect but greedy solution which mostly works
+    		if (randomEffectCounter == randomEffectSelected) {
+    			Status status = Status.statusTypes[statusEffect.statusID];
+    			if (status.showParticles) {
+    				int particleColour = status.particleColor;
+
+    				worldObj.spawnParticle(
+    						"status_effect",
+    						posX + (this.rand.nextFloat() - 0.5F) * (float) width, 
+    	                    (posY + this.rand.nextFloat() * (float) height) - (float) yOffset, 
+    	                    posZ + (this.rand.nextFloat() - 0.5F) * (float) width,
+    	                    (float)(particleColour >> 16 & 0xff) / 255F,
+    	                    (float)(particleColour >> 8 & 0xff) / 255F,
+    	                    (float)(particleColour & 0xff) / 255F
+    	                   );
+    			}
+    		}
+    		randomEffectCounter ++;
+    		
+    		// Status effect will return false when duration has run out
+    		if (!statusEffect.onUpdate(this)) {
+    			it.remove ();
+    		}
+    	}
+    }
+    
+    public void removeStatusEffect (int id) {
+    	if (activeStatusEffectsMap.containsKey(id)) {
+    		activeStatusEffectsMap.remove(id);
+    	}
+    }
+    
+    public void clearActiveStatusEffects() {
+    	Iterator<Integer> it = activeStatusEffectsMap.keySet().iterator ();
+    	
+    	while (it.hasNext()) {
+    		it.next();
+     		it.remove ();
+    	}
+    }
+    
+    public Collection<StatusEffect> getActiveStatusEffects() {
+        return activeStatusEffectsMap.values();
+    }    
+    
+    public boolean isStatusActive(Status status) {
+        return activeStatusEffectsMap.containsKey(Integer.valueOf(status.id));
+    }  
+    
+    public StatusEffect getActiveStatusEffect(Status status) {
+        return (StatusEffect)activeStatusEffectsMap.get(Integer.valueOf(status.id));
+    }    
+    
+    public void addStatusEffect (StatusEffect statusEffect) {
+    	if (Status.statusTypes[statusEffect.statusID].isApplicableTo(this)) {
+    		if (activeStatusEffectsMap.containsKey(Integer.valueOf(statusEffect.statusID))) {
+    			((StatusEffect)activeStatusEffectsMap.get(Integer.valueOf(statusEffect.statusID))).combine(statusEffect);
+    		} else {
+	    		activeStatusEffectsMap.put(Integer.valueOf(statusEffect.statusID), statusEffect);
+    		}
+    	}
+    }
+    
+    protected boolean canEntityBeSeen(Entity var1) {
+        return this.worldObj.rayTraceBlocks(new Vec3D(this.posX, this.posY + (float)this.getEyeHeight(), this.posZ), new Vec3D(var1.posX, var1.posY + (float)var1.getEyeHeight(), var1.posZ)) == null;
+    }
+    
+    public void faceEntity(Entity var1, float var2) {
+        float var3 = var1.posX - this.posX;
+        float var7 = var1.posZ - this.posZ;
+        float var5;
+        if (var1 instanceof EntityLiving) {
+            EntityLiving var9 = (EntityLiving)var1;
+            var5 = var9.posY + (float)var9.getEyeHeight() - (this.posY + (float)this.getEyeHeight());
+        } else {
+            var5 = (var1.boundingBox.minY + var1.boundingBox.maxY) / 2.0F - (this.posY + (float)this.getEyeHeight());
+        }
+
+        float var13 = (float)MathHelper.sqrt_float(var3 * var3 + var7 * var7);
+        float var11 = (float)(Math.atan2(var7, var3) * 180.0D / 3.1415927410125732D) - 90.0F;
+        float var12 = (float)(Math.atan2(var5, var13) * 180.0D / 3.1415927410125732D);
+        this.rotationPitch = this.updateRotation(this.rotationPitch, var12, var2);
+        this.rotationYaw = this.updateRotation(this.rotationYaw, var11, var2);
+    }
+    
+    private float updateRotation(float var1, float var2, float var3) {
+        float var4;
+        for(var4 = var2 - var1; var4 < -180.0F; var4 += 360.0F) {
+        }
+
+        while(var4 >= 180.0F) {
+            var4 -= 360.0F;
+        }
+
+        if (var4 > var3) {
+            var4 = var3;
+        }
+
+        if (var4 < -var3) {
+            var4 = -var3;
+        }
+
+        return var1 + var4;
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityCreeper.java MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityCreeper.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityCreeper.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityCreeper.java	2021-11-22 22:58:18.873881400 +0100
@@ -70,4 +70,12 @@
     protected final int scoreValue() {
         return Item.gunpowder.shiftedIndex;
     }
+
+    protected String getHurtSound() {
+        return "mob.creeper2";
+    }
+
+    protected String getDeathSound() {
+        return "mob.creeperdeath";
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityMob.java MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityMob.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityMob.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityMob.java	2021-11-20 23:54:47.451118100 +0100
@@ -69,7 +69,7 @@
         return "Monster";
     }
 
-    public final boolean getCanSpawnHere(float var1, float var2, float var3) {
+    public boolean getCanSpawnHere(float var1, float var2, float var3) {
         return this.worldObj.getBlockLightValue((int)var1, (int)var2, (int)var3) <= this.rand.nextInt(8) && super.getCanSpawnHere(var1, var2, var3);
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntitySkeleton.java MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntitySkeleton.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntitySkeleton.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntitySkeleton.java	2021-11-22 22:57:43.635230000 +0100
@@ -58,4 +58,16 @@
     protected final int scoreValue() {
         return Item.arrow.shiftedIndex;
     }
+    
+    protected String getLivingSound() {
+        return "mob.skeleton1";
+    }
+
+    protected String getHurtSound() {
+        return "mob.skeletonhurt1";
+    }
+
+    protected String getDeathSound() {
+        return "mob.skeletondeath";
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntitySpider.java MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntitySpider.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntitySpider.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntitySpider.java	2021-11-22 22:57:20.002981500 +0100
@@ -54,4 +54,16 @@
     protected final int scoreValue() {
         return Item.silk.shiftedIndex;
     }
+    
+    protected String getLivingSound() {
+        return "mob.spider1";
+    }
+
+    protected String getHurtSound() {
+        return "mob.spider2";
+    }
+
+    protected String getDeathSound() {
+        return "mob.spiderdeath";
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityZombie.java MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityZombie.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/entity/monster/EntityZombie.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/entity/monster/EntityZombie.java	2021-11-22 22:56:40.624459700 +0100
@@ -27,4 +27,16 @@
     protected final int scoreValue() {
         return Item.feather.shiftedIndex;
     }
+    
+    protected String getLivingSound() {
+        return "mob.zombie1";
+    }
+
+    protected String getHurtSound() {
+        return "mob.zombiehurt1";
+    }
+
+    protected String getDeathSound() {
+        return "mob.zombiedeath";
+    }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/Item.java MCP-LTS/src/minecraft/net/minecraft/game/item/Item.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/Item.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/Item.java	2021-11-19 22:43:58.753260500 +0100
@@ -1,9 +1,13 @@
 package net.minecraft.game.item;
 
 import java.util.Random;
+
+import net.minecraft.client.physics.MovingObjectPosition;
+import net.minecraft.client.renderer.Vec3D;
 import net.minecraft.game.block.Block;
 import net.minecraft.game.entity.player.EntityPlayer;
 import net.minecraft.game.level.World;
+import util.MathHelper;
 
 public class Item {
     protected static Random rand = new Random();
@@ -130,6 +134,28 @@
         return false;
     }
 
+    // Backported from r1.2.5
+    protected MovingObjectPosition getMovingObjectPositionFromPlayer(World par1World, EntityPlayer par2EntityPlayer, boolean par3) {
+        float f = 1.0F;
+        float f1 = par2EntityPlayer.prevRotationPitch + (par2EntityPlayer.rotationPitch - par2EntityPlayer.prevRotationPitch) * f;
+        float f2 = par2EntityPlayer.prevRotationYaw + (par2EntityPlayer.rotationYaw - par2EntityPlayer.prevRotationYaw) * f;
+        float d = par2EntityPlayer.prevPosX + (par2EntityPlayer.posX - par2EntityPlayer.prevPosX) * (float)f;
+        float d1 = (par2EntityPlayer.prevPosY + (par2EntityPlayer.posY - par2EntityPlayer.prevPosY) * (float)f + 1.6200000000000001F) - (float)par2EntityPlayer.yOffset;
+        float d2 = par2EntityPlayer.prevPosZ + (par2EntityPlayer.posZ - par2EntityPlayer.prevPosZ) * (float)f;
+        Vec3D vec3d = new Vec3D (d, d1, d2);
+        float f3 = MathHelper.cos(-f2 * 0.01745329F - (float)Math.PI);
+        float f4 = MathHelper.sin(-f2 * 0.01745329F - (float)Math.PI);
+        float f5 = -MathHelper.cos(-f1 * 0.01745329F);
+        float f6 = MathHelper.sin(-f1 * 0.01745329F);
+        float f7 = f4 * f5;
+        float f8 = f6;
+        float f9 = f3 * f5;
+        float d3 = 5F;
+        Vec3D vec3d1 = vec3d.addVector(f7 * d3, f8 * d3, f9 * d3);
+        MovingObjectPosition movingobjectposition = par1World.rayTraceBlocks_flags(vec3d, vec3d1, par3, false);
+        return movingobjectposition;
+    }    
+    
     static {
         ItemSpade var10000 = new ItemSpade(0, 2);
         byte var1 = 82;
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemArmor.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemArmor.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemArmor.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemArmor.java	2021-11-14 15:04:23.527376400 +0100
@@ -1,11 +1,11 @@
 package net.minecraft.game.item;
 
-public final class ItemArmor extends Item {
+public class ItemArmor extends Item {
     private static final int[] damageReduceAmountArray = new int[]{3, 8, 6, 3};
     private static final int[] maxDamageArray = new int[]{11, 16, 15, 13};
-    public final int armorType;
-    public final int damageReduceAmount;
-    public final int renderIndex;
+    public int armorType;
+    public int damageReduceAmount;
+    public int renderIndex;
 
     public ItemArmor(int var1, int var2, int var3, int var4) {
         super(var1);
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemAxe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemAxe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemAxe.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemAxe.java	2021-11-12 11:46:15.758968600 +0100
@@ -2,7 +2,7 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemAxe extends ItemTool {
+public class ItemAxe extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
 
     public ItemAxe(int var1, int var2) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBlock.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBlock.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBlock.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBlock.java	2021-11-17 07:38:13.384167500 +0100
@@ -4,7 +4,7 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.level.World;
 
-public final class ItemBlock extends Item {
+public class ItemBlock extends Item {
     private int blockID;
 
     public ItemBlock(int var1) {
@@ -42,7 +42,7 @@
             return false;
         } else if (var3 > 0 && var4 > 0 && var5 > 0 && var3 < var2.width - 1 && var4 < var2.height - 1 && var5 < var2.length - 1) {
             int var7 = var2.getBlockId(var3, var4, var5);
-            Block var9 = Block.blocksList[var7];
+            Block var9 = Block.blocksList[var7]; 
             if (this.blockID > 0 && var9 == null || var9 == Block.waterMoving || var9 == Block.waterStill || var9 == Block.lavaMoving || var9 == Block.lavaStill || var9 == Block.fire) {
                 AxisAlignedBB var8 = (var9 = Block.blocksList[this.blockID]).getCollisionBoundingBoxFromPool(var3, var4, var5);
                 if (var2.checkIfAABBIsClear(var8) && var9.canPlaceBlockAt(var2, var3, var4, var5) && var2.setBlockWithNotify(var3, var4, var5, this.blockID)) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBow.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBow.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemBow.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemBow.java	2021-11-12 11:46:24.755938200 +0100
@@ -4,13 +4,13 @@
 import net.minecraft.game.entity.player.EntityPlayer;
 import net.minecraft.game.level.World;
 
-public final class ItemBow extends Item {
+public class ItemBow extends Item {
     public ItemBow(int var1) {
         super(5);
         this.maxStackSize = 1;
     }
 
-    public final ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+    public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
         if (var3.inventory.consumeInventoryItem(Item.arrow.shiftedIndex)) {
             var2.playSoundAtEntity(var3, "random.bow", 1.0F, 1.0F / (rand.nextFloat() * 0.4F + 0.8F));
             var2.spawnEntityInWorld(new EntityArrow(var2, var3));
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemFlintAndSteel.java	2021-11-12 11:46:39.229743100 +0100
@@ -3,14 +3,14 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.level.World;
 
-public final class ItemFlintAndSteel extends Item {
+public class ItemFlintAndSteel extends Item {
     public ItemFlintAndSteel(int var1) {
         super(3);
         this.maxStackSize = 1;
         this.maxDamage = 64;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 == 0) {
             --var4;
         }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemHoe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemHoe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemHoe.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemHoe.java	2021-11-12 11:47:11.626280800 +0100
@@ -4,14 +4,14 @@
 import net.minecraft.game.entity.other.EntityItem;
 import net.minecraft.game.level.World;
 
-public final class ItemHoe extends Item {
+public class ItemHoe extends Item {
     public ItemHoe(int var1, int var2) {
         super(var1);
         this.maxStackSize = 1;
         this.maxDamage = 32 << var2;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var3 > 0 && var4 > 0 && var5 > 0 && var3 < var2.width - 1 && var4 < var2.height - 1 && var5 < var2.length - 1) {
             var6 = var2.getBlockId(var3, var4, var5);
             if ((var2.getBlockMaterial(var3, var4 + 1, var5).isSolid() || var6 != Block.grass.blockID) && var6 != Block.dirt.blockID) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPainting.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPainting.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPainting.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPainting.java	2021-11-12 11:47:23.654843700 +0100
@@ -3,13 +3,13 @@
 import net.minecraft.game.entity.EntityPainting;
 import net.minecraft.game.level.World;
 
-public final class ItemPainting extends Item {
+public class ItemPainting extends Item {
     public ItemPainting(int var1) {
         super(65);
         this.maxDamage = 64;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 == 0) {
             return false;
         } else if (var6 == 1) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPickaxe.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPickaxe.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemPickaxe.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemPickaxe.java	2021-11-12 11:46:01.136183000 +0100
@@ -3,7 +3,7 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.Material;
 
-public final class ItemPickaxe extends ItemTool {
+public class ItemPickaxe extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
     private int harvestLevel;
 
@@ -12,7 +12,7 @@
         this.harvestLevel = var2;
     }
 
-    public final boolean canHarvestBlock(Block var1) {
+    public boolean canHarvestBlock(Block var1) {
         if (var1 == Block.obsidian) {
             return this.harvestLevel == 3;
         } else if (var1 != Block.blockDiamond && var1 != Block.oreDiamond) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSeeds.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSeeds.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSeeds.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSeeds.java	2021-11-12 11:47:39.196972600 +0100
@@ -3,7 +3,7 @@
 import net.minecraft.game.block.Block;
 import net.minecraft.game.level.World;
 
-public final class ItemSeeds extends Item {
+public class ItemSeeds extends Item {
     private int blockType;
 
     public ItemSeeds(int var1, int var2) {
@@ -11,7 +11,7 @@
         this.blockType = var2;
     }
 
-    public final boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
+    public boolean onItemUse(ItemStack var1, World var2, int var3, int var4, int var5, int var6) {
         if (var6 != 1) {
             return false;
         } else if (var3 > 0 && var4 > 0 && var5 > 0 && var3 < var2.width - 1 && var4 < var2.height - 1 && var5 < var2.length - 1) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSoup.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSoup.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSoup.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSoup.java	2021-11-12 11:47:45.447350500 +0100
@@ -3,12 +3,12 @@
 import net.minecraft.game.entity.player.EntityPlayer;
 import net.minecraft.game.level.World;
 
-public final class ItemSoup extends ItemFood {
+public class ItemSoup extends ItemFood {
     public ItemSoup(int var1, int var2) {
         super(26, 10);
     }
 
-    public final ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
+    public ItemStack onItemRightClick(ItemStack var1, World var2, EntityPlayer var3) {
         super.onItemRightClick(var1, var2, var3);
         return new ItemStack(Item.bowlEmpty);
     }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSpade.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSpade.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSpade.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSpade.java	2021-11-12 11:47:52.637219000 +0100
@@ -2,7 +2,7 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemSpade extends ItemTool {
+public class ItemSpade extends ItemTool {
     private static Block[] blocksEffectiveAgainst;
 
     public ItemSpade(int var1, int var2) {
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSword.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSword.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemSword.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemSword.java	2021-11-12 11:44:23.664514600 +0100
@@ -2,8 +2,8 @@
 
 import net.minecraft.game.block.Block;
 
-public final class ItemSword extends Item {
-    private int weaponDamage;
+public class ItemSword extends Item {
+    public int weaponDamage;
 
     public ItemSword(int var1, int var2) {
         super(var1);
@@ -12,19 +12,19 @@
         this.weaponDamage = 4 + (var2 << 1);
     }
 
-    public final float getStrVsBlock(Block var1) {
+    public float getStrVsBlock(Block var1) {
         return 1.5F;
     }
 
-    public final void hitEntity(ItemStack var1) {
+    public void hitEntity(ItemStack var1) {
         var1.damageItem(1);
     }
 
-    public final void onBlockDestroyed(ItemStack var1) {
+    public void onBlockDestroyed(ItemStack var1) {
         var1.damageItem(2);
     }
 
-    public final int getDamageVsEntity() {
+    public int getDamageVsEntity() {
         return this.weaponDamage;
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemTool.java MCP-LTS/src/minecraft/net/minecraft/game/item/ItemTool.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/item/ItemTool.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/item/ItemTool.java	2021-11-12 11:40:23.153406400 +0100
@@ -4,8 +4,8 @@
 
 public class ItemTool extends Item {
     private Block[] blocksEffectiveAgainst;
-    private float efficiencyOnProperMaterial = 4.0F;
-    private int damageVsEntity;
+    public float efficiencyOnProperMaterial = 4.0F;
+    public int damageVsEntity;
 
     public ItemTool(int var1, int var2, int var3, Block[] var4) {
         super(var1);
@@ -16,7 +16,7 @@
         this.damageVsEntity = var2 + var3;
     }
 
-    public final float getStrVsBlock(Block var1) {
+    public float getStrVsBlock(Block var1) {
         for(int var2 = 0; var2 < this.blocksEffectiveAgainst.length; ++var2) {
             if (this.blocksEffectiveAgainst[var2] == var1) {
                 return this.efficiencyOnProperMaterial;
@@ -26,15 +26,15 @@
         return 1.0F;
     }
 
-    public final void hitEntity(ItemStack var1) {
+    public void hitEntity(ItemStack var1) {
         var1.damageItem(2);
     }
 
-    public final void onBlockDestroyed(ItemStack var1) {
+    public void onBlockDestroyed(ItemStack var1) {
         var1.damageItem(1);
     }
 
-    public final int getDamageVsEntity() {
+    public int getDamageVsEntity() {
         return this.damageVsEntity;
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/Spawner.java MCP-LTS/src/minecraft/net/minecraft/game/level/Spawner.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/Spawner.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/level/Spawner.java	2021-11-23 11:27:17.544240800 +0100
@@ -1,5 +1,10 @@
 package net.minecraft.game.level;
 
+import java.util.HashMap;
+import java.util.Iterator;
+
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.game.entity.Entity;
 import net.minecraft.game.entity.EntityLiving;
 import net.minecraft.game.entity.animal.EntityAnimal;
@@ -13,13 +18,30 @@
 
 public class Spawner {
     private World worldObj;
+    
+    public static HashMap<Integer,Class<? extends Entity>> availableMonsterEntities;
+    public static HashMap<Integer,Class<? extends Entity>> availableAnimalEntities;
+    
+    static {
+    	availableMonsterEntities = new HashMap<Integer,Class<? extends Entity>>();
+    	availableMonsterEntities.put(0, EntitySkeleton.class);
+    	availableMonsterEntities.put(1, EntityCreeper.class);
+    	availableMonsterEntities.put(2, EntitySpider.class);
+    	availableMonsterEntities.put(3, EntityZombie.class);
+    	
+    	availableAnimalEntities = new HashMap<Integer,Class<? extends Entity>>();
+    	availableAnimalEntities.put(0, EntityPig.class);
+    	availableAnimalEntities.put(1, EntitySheep.class);
+    }
 
     public Spawner(World var1) {
         this.worldObj = var1;
     }
 
     public final void performSpawning() {
-        int var1 = this.worldObj.width * this.worldObj.length * this.worldObj.height * 20 / 64 / 64 / 64 / 2;
+        //int var1 = this.worldObj.width * this.worldObj.length * this.worldObj.height * 20 / 64 / 64 / 64 / 2;
+    	int var1 = (this.worldObj.width * this.worldObj.length * this.worldObj.height * 20) >> 19;
+    	
         if (this.worldObj.difficultySetting == 0) {
             var1 = 0 / 4;
         }
@@ -29,16 +51,20 @@
         }
 
         if (this.worldObj.difficultySetting == 2) {
-            var1 = (var1 << 2) / 4;
+            // var1 = (var1 << 2) / 4; // WTF, this does nothing!
         }
 
         if (this.worldObj.difficultySetting == 3) {
             var1 = var1 * 6 / 4;
         }
-
+        
         int var2 = this.worldObj.width * this.worldObj.length / 4000;
         int var3 = this.worldObj.entitiesInLevelList(EntityMob.class);
 
+        // ModLoader hook
+        var1 = ModLoader.spawnerSetMaxHostileMobs (var1, this.worldObj);
+        var2 = ModLoader.spawnerSetMaxNonHostileMobs (var2, this.worldObj);
+        
         int var4;
         EntityLiving var5;
         int var6;
@@ -64,11 +90,20 @@
                 var5 = this.worldObj.playerEntity;
                 var22 = this;
                 var6 = 0;
-                var7 = this.worldObj.random.nextInt(5);
+                
+                int monsterSelector = this.worldObj.random.nextInt(availableMonsterEntities.size());
+                Iterator<Integer> it = availableMonsterEntities.keySet().iterator();
+                do {
+                	var7 = (Integer)it.next ();
+                } while (0 < monsterSelector --);
+                
                 var8 = this.worldObj.random.nextInt(this.worldObj.width);
                 var9 = (int)(Math.min(this.worldObj.random.nextFloat(), this.worldObj.random.nextFloat()) * (float)this.worldObj.height);
                 var10 = this.worldObj.random.nextInt(this.worldObj.length);
 
+                // ModLoader hook
+                var7 = ModLoader.spawnerSelectMonster (var7);
+                
                 for(var11 = 0; var11 < 2; ++var11) {
                     var12 = var8;
                     var13 = var9;
@@ -97,32 +132,30 @@
                                     continue;
                                 }
                             }
-
-                            var23 = null;
-                            if (var7 == 0) {
-                                var23 = new EntitySkeleton(var22.worldObj);
-                            }
-
-                            if (var7 == 1) {
-                                var23 = new EntityCreeper(var22.worldObj);
-                            }
-
-                            if (var7 == 2) {
-                                var23 = new EntitySpider(var22.worldObj);
-                            }
-
-                            if (var7 == 3) {
-                                var23 = new EntityZombie(var22.worldObj);
+                            
+                            // ModLoader hook
+                            var7 = ModLoader.spawnerSelectMonsterBasedOnPosition (var7, this.worldObj, var12, var13, var14);
+
+                            try {
+                            	var23 = (availableMonsterEntities.get(var7)).getConstructor (World.class).newInstance (var22.worldObj);
+                            } catch (Exception e) {
+                            	// ModLoader hook
+                            	var23 = ModLoader.spawnMonster (var7, var22.worldObj);
                             }
 
                             if (var23 instanceof EntityMob && var22.worldObj.difficultySetting == 0) {
                                 var23 = null;
                             }
-
+                            
                             if (var23 != null && !var22.worldObj.isBlockNormalCube(var12, var13, var14) && var22.worldObj.isBlockNormalCube(var12, var13 - 1, var14) && ((EntityLiving)var23).getCanSpawnHere(var16, var17, var18)) {
                                 var21 = var22.worldObj.random.nextFloat() * 360.0F;
                                 ((EntityLiving)var23).setPositionAndRotation(var16, var17, var18, var21, 0.0F);
                                 ++var6;
+                                
+                                
+                                	System.out.println (var23.getClass () + " happenning at " + var16 + " " + var17 + " " + var18);
+                                
+                                
                                 var22.worldObj.spawnEntityInWorld((Entity)var23);
                             }
                         }
@@ -140,10 +173,20 @@
                 var5 = this.worldObj.playerEntity;
                 var22 = this;
                 var6 = 0;
-                var7 = this.worldObj.random.nextInt(2);
+                
+                int animalSelector = this.worldObj.random.nextInt(availableAnimalEntities.size());
+                Iterator<Integer> it = availableAnimalEntities.keySet().iterator();
+
+                do {
+                	var7 = (Integer)it.next ();
+                } while (0 < animalSelector --);
+               
                 var8 = this.worldObj.random.nextInt(this.worldObj.width);
                 var9 = this.worldObj.random.nextInt(this.worldObj.height);
                 var10 = this.worldObj.random.nextInt(this.worldObj.length);
+                
+                // ModLoader hook
+                var7 = ModLoader.spawnerSelectAnimal (var7);
 
                 for(var11 = 0; var11 < 2; ++var11) {
                     var12 = var8;
@@ -173,16 +216,17 @@
                                     continue;
                                 }
                             }
-
-                            var23 = null;
-                            if (var7 == 0) {
-                                var23 = new EntityPig(var22.worldObj);
-                            }
-
-                            if (var7 == 1) {
-                                var23 = new EntitySheep(var22.worldObj);
+                            
+                            // ModLoader hook
+                            var7 = ModLoader.spawnerSelectAnimalBasedOnPosition (var7, this.worldObj, var12, var13, var14);
+
+                            try {
+                            	var23 = (availableAnimalEntities.get(var7)).getConstructor (World.class).newInstance (var22.worldObj);
+                            } catch (Exception e) {
+                            	// ModLoader hook
+                            	var23 = ModLoader.spawnAnimal (var7, var22.worldObj);
                             }
-
+                                                        
                             if (var23 != null && !var22.worldObj.isBlockNormalCube(var12, var13, var14) && var22.worldObj.isBlockNormalCube(var12, var13 - 1, var14) && ((EntityLiving)var23).getCanSpawnHere(var16, var17, var18)) {
                                 var21 = var22.worldObj.random.nextFloat() * 360.0F;
                                 ((EntityLiving)var23).setPositionAndRotation(var16, var17, var18, var21, 0.0F);
@@ -196,6 +240,5 @@
                 var4 += var6;
             }
         }
-
     }
 }
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/World.java MCP-LTS/src/minecraft/net/minecraft/game/level/World.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/World.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/level/World.java	2021-11-18 23:30:17.495719700 +0100
@@ -873,8 +873,16 @@
     public final boolean isWater(int var1, int var2, int var3) {
         return (var1 = this.getBlockId(var1, var2, var3)) > 0 && Block.blocksList[var1].material == Material.water;
     }
-
+    
     public final MovingObjectPosition rayTraceBlocks(Vec3D var1, Vec3D var2) {
+    	return rayTraceBlocks_flags(var1, var2, false, false);
+    }
+
+    public final MovingObjectPosition rayTraceBlocks_flag(Vec3D var1, Vec3D var2, boolean waterCollides) {
+    	return rayTraceBlocks_flags(var1, var2, waterCollides, false);
+    }
+    
+    public final MovingObjectPosition rayTraceBlocks_flags(Vec3D var1, Vec3D var2, boolean waterCollides, boolean flag2) {
         if (!Float.isNaN(var1.xCoord) && !Float.isNaN(var1.yCoord) && !Float.isNaN(var1.zCoord)) {
             if (!Float.isNaN(var2.xCoord) && !Float.isNaN(var2.yCoord) && !Float.isNaN(var2.zCoord)) {
                 int var3 = MathHelper.floor_float(var2.xCoord);
@@ -883,16 +891,20 @@
                 int var6 = MathHelper.floor_float(var1.xCoord);
                 int var7 = MathHelper.floor_float(var1.yCoord);
                 int var8 = MathHelper.floor_float(var1.zCoord);
-                int var9 = 20;
-
+                               
                 int var21;
                 MovingObjectPosition var22;
                 Block var23;
-                do {
-                    if (var9-- < 0) {
-                        return null;
+                for (int var9 = 0; var9 < 20; var9 ++) {
+                	
+                    int blockID = getBlockId (var6, var7, var8);
+                    int metadata = getBlockMetadata (var6, var7, var8);
+                    Block block = Block.blocksList[blockID];
+                    if ((!flag2 || block.getCollisionBoundingBoxFromPool(var6, var7, var8) != null) && blockID > 0 && block.canCollideCheck(metadata, waterCollides)) {
+                    	MovingObjectPosition movingobjectposition = block.collisionRayTrace(this, var6, var7, var8, var1, var2);
+                    	if (movingobjectposition != null) return movingobjectposition;
                     }
-
+                    
                     if (Float.isNaN(var1.xCoord) || Float.isNaN(var1.yCoord) || Float.isNaN(var1.zCoord)) {
                         return null;
                     }
@@ -998,11 +1010,14 @@
                         ++var20.zCoord;
                     }
 
-                    var21 = this.getBlockId(var6, var7, var8);
-                    var23 = Block.blocksList[var21];
-                } while(var21 <= 0 || !var23.isCollidable() || (var22 = var23.collisionRayTrace(this, var6, var7, var8, var1, var2)) == null);
+                    blockID = this.getBlockId(var6, var7, var8);
+                    metadata = this.getBlockMetadata(var6, var7, var8);
+                    block = Block.blocksList[blockID];
+                                        
+                    // while(var21 <= 0 || !var23.isCollidable() || (var22 = var23.collisionRayTrace(this, var6, var7, var8, var1, var2)) == null);
+                } 
 
-                return var22;
+                return null;
             } else {
                 return null;
             }
@@ -1553,7 +1568,12 @@
     }
 
     public final void removeBlockTileEntity(int var1, int var2, int var3) {
-        this.list.remove(this.map.remove(var1 + (var2 << 10) + (var3 << 10 << 10)));
+        int index = var1 + (var2 << 10) + (var3 << 10 << 10);
+        TileEntity var5;
+        if ((var5 = (TileEntity)this.map.get(index)) != null) {
+        	var5.onTileEntityRemoved(this, var1, var2, var3);
+        }
+    	this.list.remove(this.map.remove(index));
     }
 
     public final TileEntity getBlockTileEntity(int var1, int var2, int var3) {
@@ -1561,7 +1581,7 @@
         TileEntity var5;
         if ((var5 = (TileEntity)this.map.get(var4)) == null) {
             int var6 = this.getBlockId(var1, var2, var3);
-            ((BlockContainer)Block.blocksList[var6]).onBlockAdded(this, var1, var2, var3);
+            if (Block.blocksList[var6] != null) ((BlockContainer)Block.blocksList[var6]).onBlockAdded(this, var1, var2, var3);
             var5 = (TileEntity)this.map.get(var4);
         }
 
diff -ur MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java MCP-LTS/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java
--- MCP-LTS_Clean/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java	2021-11-10 11:11:52.000000000 +0100
+++ MCP-LTS/src/minecraft/net/minecraft/game/level/generator/LevelGenerator.java	2021-11-17 13:37:50.663812100 +0100
@@ -2,6 +2,9 @@
 
 import java.util.ArrayList;
 import java.util.Random;
+
+import com.mojontwins.modloader.ModLoader;
+
 import net.minecraft.game.block.Block;
 import net.minecraft.game.block.BlockFlower;
 import net.minecraft.game.level.Spawner;
@@ -405,8 +408,12 @@
         this.guiLoading.displayLoadingString("Building..");
         this.loadingBar();
         this.setNextPhase(0.0F);
+        
         var6.findSpawn();
         generateHouse(var6);
+        
+        ModLoader.hookGenerateStructures (this, var6);
+        
         this.guiLoading.displayLoadingString("Planting..");
         this.loadingBar();
         if (this.levelType != 1) {
@@ -434,6 +441,9 @@
         this.populateFlowersAndMushrooms(var6, Block.mushroomBrown, 50);
         this.loadingBar();
         this.populateFlowersAndMushrooms(var6, Block.mushroomRed, 50);
+        
+        ModLoader.hookPlanting (this, var6, this.rand);
+        
         this.guiLoading.displayLoadingString("Lighting..");
         this.loadingBar();
 
Only in MCP-LTS/src/minecraft: particles.png
